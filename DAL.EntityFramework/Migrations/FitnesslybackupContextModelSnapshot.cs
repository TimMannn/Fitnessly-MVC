// <auto-generated />
using System;
using DAL.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.EntityFramework.Migrations
{
    [DbContext(typeof(FitnesslybackupContext))]
    partial class FitnesslybackupContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DAL.EntityFramework.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("exercise_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("ExerciseDisplay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("exercise_display");

                    b.Property<double>("ExerciseGewicht")
                        .HasColumnType("double")
                        .HasColumnName("exercise_gewicht");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("exercise_name");

                    b.Property<int>("ExerciseReps")
                        .HasColumnType("int(11)")
                        .HasColumnName("exercise_reps");

                    b.Property<int>("ExerciseSets")
                        .HasColumnType("int(11)")
                        .HasColumnName("exercise_sets");

                    b.HasKey("ExerciseId")
                        .HasName("PRIMARY");

                    b.ToTable("exercise", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("workout_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("workout_name");

                    b.HasKey("WorkoutId")
                        .HasName("PRIMARY");

                    b.ToTable("workout", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutexercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int(11)")
                        .HasColumnName("exercise_id");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("workout_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExerciseId" }, "fk_exercise_id");

                    b.HasIndex(new[] { "WorkoutId" }, "fk_workout_id");

                    b.ToTable("workoutexercise", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessie", b =>
                {
                    b.Property<int>("WorkoutsessieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessie_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkoutsessieId"));

                    b.Property<string>("WorkoutsessieName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("workoutsessie_name");

                    b.Property<TimeOnly>("WorkoutsessieTijd")
                        .HasColumnType("time")
                        .HasColumnName("workoutsessie_tijd");

                    b.HasKey("WorkoutsessieId")
                        .HasName("PRIMARY");

                    b.ToTable("workoutsessie", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieexercise", b =>
                {
                    b.Property<int>("WorkoutsessieexerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessieexercise_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkoutsessieexerciseId"));

                    b.Property<string>("WorkoutsessieexerciseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("workoutsessieexercise_name");

                    b.Property<int>("WorkoutsessieexerciseSets")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessieexercise_sets");

                    b.HasKey("WorkoutsessieexerciseId")
                        .HasName("PRIMARY");

                    b.ToTable("workoutsessieexercise", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieexerciseworkoutsessiestat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("WorkoutsessieexerciseId")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessieexercise_id");

                    b.Property<int>("WorkoutsessiestatsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessiestats_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WorkoutsessieexerciseId" }, "fk_workoutsessieexercise_id");

                    b.HasIndex(new[] { "WorkoutsessiestatsId" }, "fk_workoutsessiestats_id");

                    b.ToTable("workoutsessieexerciseworkoutsessiestats", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessiestat", b =>
                {
                    b.Property<int>("WorkoutsessiestatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessiestats_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkoutsessiestatsId"));

                    b.Property<double>("WorkoutsessiestatsGewicht")
                        .HasColumnType("double")
                        .HasColumnName("workoutsessiestats_gewicht");

                    b.Property<int>("WorkoutsessiestatsReps")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessiestats_reps");

                    b.HasKey("WorkoutsessiestatsId")
                        .HasName("PRIMARY");

                    b.ToTable("workoutsessiestats", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieworkoutsessieexercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("WorkoutsessieId")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessie_id");

                    b.Property<int>("WorkoutsessieexerciseId")
                        .HasColumnType("int(11)")
                        .HasColumnName("workoutsessieexercise_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WorkoutsessieexerciseId" }, "fk2_workoutsessieexercise_id");

                    b.HasIndex(new[] { "WorkoutsessieId" }, "fk_workoutsessie_id");

                    b.ToTable("workoutsessieworkoutsessieexercise", (string)null);
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutexercise", b =>
                {
                    b.HasOne("DAL.EntityFramework.Models.Exercise", "Exercise")
                        .WithMany("Workoutexercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_id");

                    b.HasOne("DAL.EntityFramework.Models.Workout", "Workout")
                        .WithMany("Workoutexercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_id");

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieexerciseworkoutsessiestat", b =>
                {
                    b.HasOne("DAL.EntityFramework.Models.Workoutsessieexercise", "Workoutsessieexercise")
                        .WithMany("Workoutsessieexerciseworkoutsessiestats")
                        .HasForeignKey("WorkoutsessieexerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workoutsessieexercise_id");

                    b.HasOne("DAL.EntityFramework.Models.Workoutsessiestat", "Workoutsessiestats")
                        .WithMany("Workoutsessieexerciseworkoutsessiestats")
                        .HasForeignKey("WorkoutsessiestatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workoutsessiestats_id");

                    b.Navigation("Workoutsessieexercise");

                    b.Navigation("Workoutsessiestats");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieworkoutsessieexercise", b =>
                {
                    b.HasOne("DAL.EntityFramework.Models.Workoutsessie", "Workoutsessie")
                        .WithMany("Workoutsessieworkoutsessieexercises")
                        .HasForeignKey("WorkoutsessieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workoutsessie_id");

                    b.HasOne("DAL.EntityFramework.Models.Workoutsessieexercise", "Workoutsessieexercise")
                        .WithMany("Workoutsessieworkoutsessieexercises")
                        .HasForeignKey("WorkoutsessieexerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk2_workoutsessieexercise_id");

                    b.Navigation("Workoutsessie");

                    b.Navigation("Workoutsessieexercise");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Exercise", b =>
                {
                    b.Navigation("Workoutexercises");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workout", b =>
                {
                    b.Navigation("Workoutexercises");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessie", b =>
                {
                    b.Navigation("Workoutsessieworkoutsessieexercises");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessieexercise", b =>
                {
                    b.Navigation("Workoutsessieexerciseworkoutsessiestats");

                    b.Navigation("Workoutsessieworkoutsessieexercises");
                });

            modelBuilder.Entity("DAL.EntityFramework.Models.Workoutsessiestat", b =>
                {
                    b.Navigation("Workoutsessieexerciseworkoutsessiestats");
                });
#pragma warning restore 612, 618
        }
    }
}
